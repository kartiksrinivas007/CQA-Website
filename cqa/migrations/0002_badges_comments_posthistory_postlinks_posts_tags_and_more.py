# Generated by Django 4.1.6 on 2023-02-12 10:13

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cqa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('class_field', models.SmallIntegerField(db_column='class')),
                ('name', models.CharField(max_length=64)),
                ('tag_based', models.BooleanField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'badges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('score', models.SmallIntegerField()),
                ('content_license', models.CharField(max_length=64)),
                ('user_display_name', models.CharField(blank=True, max_length=64, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('post_history_type_id', models.SmallIntegerField()),
                ('user_display_name', models.CharField(blank=True, max_length=64, null=True)),
                ('content_license', models.CharField(blank=True, max_length=64, null=True)),
                ('revision_guid', models.UUIDField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'post_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_post_id', models.IntegerField()),
                ('post_id', models.IntegerField()),
                ('link_type_id', models.SmallIntegerField()),
                ('creation_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'post_links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_user_id', models.IntegerField(blank=True, null=True)),
                ('last_editor_user_id', models.IntegerField(blank=True, null=True)),
                ('post_type_id', models.SmallIntegerField()),
                ('accepted_answer_id', models.IntegerField(blank=True, null=True)),
                ('score', models.IntegerField()),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('view_count', models.IntegerField(blank=True, null=True)),
                ('answer_count', models.IntegerField(blank=True, null=True)),
                ('comment_count', models.IntegerField(blank=True, null=True)),
                ('owner_display_name', models.CharField(blank=True, max_length=64, null=True)),
                ('last_editor_display_name', models.CharField(blank=True, max_length=64, null=True)),
                ('title', models.CharField(blank=True, max_length=512, null=True)),
                ('tags', models.CharField(blank=True, max_length=512, null=True)),
                ('content_license', models.CharField(max_length=64)),
                ('body', models.TextField(blank=True, null=True)),
                ('favorite_count', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateTimeField()),
                ('community_owned_date', models.DateTimeField(blank=True, null=True)),
                ('closed_date', models.DateTimeField(blank=True, null=True)),
                ('last_edit_date', models.DateTimeField(blank=True, null=True)),
                ('last_activity_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excerpt_post_id', models.IntegerField(blank=True, null=True)),
                ('wiki_post_id', models.IntegerField(blank=True, null=True)),
                ('tag_name', models.CharField(max_length=255)),
                ('count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('post_id', models.IntegerField()),
                ('vote_type_id', models.SmallIntegerField()),
                ('bounty_amount', models.SmallIntegerField(blank=True, null=True)),
                ('creation_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'votes',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='users',
            options={'managed': False},
        ),
    ]
